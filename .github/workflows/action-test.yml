name: Composite Action Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    inputs:
      sample_input:
        required: true
        type: string
    secrets:
      secret_token:
        required: true  

  workflow_dispatch:

jobs:
  job1:
    name: Test 'test-action-1' run
    runs-on: ubuntu-latest
    steps:
      - name: Check env var
        run: |
              echo "Secret :  ${{ secrets.WORKFLOW_TOKEN }}"
      - name: Checkout current repo!
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - id: test-action-1
        uses: ./composite_actions/test-action-1
        with:
          who-to-greet: 'Faddy'
      - run: echo Hi
  job2:
    needs: [job1]
    name: Test 'test-action-2' run
    runs-on: ubuntu-latest
    steps:
      - name: Check env var
        run: |
              echo "Secret :  ${{ secrets.WORKFLOW_TOKEN }}"
      - name: Checkout current repo!
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - id: test-action-2
        name: Run test-action-2
        uses: ./composite_actions/test-action-2
        with:
          who-to-greet: 'Faddy Baba'
      - name: List all files in the github workspace
        run: ls -lta ${{ github.workspace }}
      - id: read_yaml
        name: Read Yaml
        uses: theonlyfaddyinc/read-yaml-into-json-string@v3
        with:
          filepath: ${{ github.workspace }}/pipeline.yaml
      - name: Parse for specific value using jq
        id: parser
        run: |
          user=$(echo '${{ steps.read_yaml.outputs.data }}' | jq -r .build.language.version)
          snapshot=$(echo '${{ steps.read_yaml.outputs.data }}' | jq -r .build.tool.version)
          echo "USER=${user}" >> $GITHUB_OUTPUT
          echo "SNAPSHOT=${snapshot}" >> $GITHUB_OUTPUT