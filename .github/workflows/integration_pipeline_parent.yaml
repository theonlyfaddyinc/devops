name: Integration Snapshot Parent
run-name: ${{ github.ref_name }} | ${{ github.event_name }} | '${{ github.event.head_commit.message }}'

on: [workflow_dispatch, workflow_call]

jobs:
  Build_Code:
    name: Build Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current repo!
      uses: actions/checkout@v3
    - name: Clone global config repo under ./global_config
      uses: actions/checkout@v3
      with:
        repository: theonlyfaddyinc/global_configs
        ref: main
        path: ${{ github.workspace }}/global_configs
    - id: read_pipeline_repo_yaml
      name: Read Pipeline Repo Yaml
      uses: theonlyfaddyinc/devops-standard-library/composite_actions/parsers/read_yaml_into_json@main
      with:
        filepath: ${{ github.workspace }}/pipeline.yaml
    - id: read_pipeline_global_yaml
      name: Read Pipeline Repo Yaml
      uses: theonlyfaddyinc/devops-standard-library/composite_actions/parsers/read_yaml_into_json@main
      with: 
        filepath: ${{ github.workspace }}/global_configs/pipeline-global.yaml
    - name: Parse for specific value using jq
      id: parser
      run: |
            build_lang_name=$(echo '${{ steps.read_pipeline_repo_yaml.outputs.data }}' | jq -r .build.language.name)
            build_lang_version=$(echo '${{ steps.read_pipeline_repo_yaml.outputs.data }}' | jq -r .build.language.version)
            build_tool_name=$(echo '${{ steps.read_pipeline_repo_yaml.outputs.data }}' | jq -r .build.tool.name)
            build_tool_version=$(echo '${{ steps.read_pipeline_repo_yaml.outputs.data }}' | jq -r .build.tool.version)
            echo "build_lang_name=${build_lang_name}" >> $GITHUB_OUTPUT
            echo "build_lang_version=${build_lang_version}" >> $GITHUB_OUTPUT
            echo "build_tool_name=${build_tool_name}" >> $GITHUB_OUTPUT
            echo "build_tool_version=${build_tool_version}" >> $GITHUB_OUTPUT
            echo 'pipeline_repo=${{ steps.read_pipeline_repo_yaml.outputs.data }}' >> $GITHUB_OUTPUT
            echo 'pipeline_global=${{ steps.read_pipeline_global_yaml.outputs.data }}' >> $GITHUB_OUTPUT

    - name: Print JSON Parser outputs
      run: |
            echo ${{ steps.parser.outputs.build_lang_name }}
            echo ${{ steps.parser.outputs.build_lang_version }}
            echo ${{ steps.parser.outputs.build_tool_name }}
            echo ${{ steps.parser.outputs.build_tool_version }}
            echo ${{ steps.parser.outputs.pipeline_repo }}
            echo ${{ steps.parser.outputs.pipeline_global }}
    - uses: theonlyfaddyinc/devops-standard-library/composite_actions/setup_build_tools@main
      with:
        jdk_version: '13'
        maven_version: '3.8.1'
        pipeline_repo: ${{ steps.read_pipeline_repo_yaml.outputs.data }}
        pipeline_global: ${{ steps.read_pipeline_global_yaml.outputs.data }}

    - name: buildSnapshot
      run: mvn clean install -Dmaven.test.skip=true --update-snapshots --no-transfer-progress
  Run_Unit_Tests:
    runs-on: ubuntu-latest
    needs: [Build_Code]
    steps:
    - uses: actions/checkout@v2
    
    - uses: theonlyfaddyinc/devops-standard-library/composite_action/setup-jdk-maven@main
      with:
        jdk_version: '14'
        maven_version: '3.8.1'

    - name: Test
      run: mvn test --update-snapshots --no-transfer-progress 
      
  Run_Functional_Tests:
    runs-on: ubuntu-latest
    needs: [Run_Unit_Tests]
    steps:
    - uses: actions/checkout@v2

    - uses: theonlyfaddyinc/devops-standard-library/composite_action/setup-jdk-maven@main
      with:
        jdk_version: '14'
        maven_version: '3.8.1'

    - name: verify
      run: mvn verify --update-snapshots --no-transfer-progress     
      
  Evaluate:
    runs-on: ubuntu-latest
    needs: [Run_Functional_Tests]
    steps:
    - uses: actions/checkout@v2
    - name: Check the JDK java-version
      run: | 
            java --version
            mvn --version      
    - name: evaluate
      run: mvn help:evaluate -Dexpression=project.version --quiet -DforceStdout     
      
