name: Integration Snapshot Parent
run-name: ${{ github.ref_name }} | ${{ github.event_name }} | '${{ github.event.head_commit.message }}'

on: 
  workflow_dispatch:
    inputs: 
      pipeline_type: 
        description: 'Type of Pipeline [SNAPSHOT/RELEASE]'
        default: 'RELEASE'
        required: false
        type: string

  workflow_call:
    inputs: 
      pipeline_type: 
        description: 'Type of Pipeline [SNAPSHOT/RELEASE]'
        default: 'RELEASE'
        required: false
        type: string


jobs:
  BUILD_TEST_TEST_FUNC:
    name: Build & Run Tests
    runs-on: ubuntu-latest
    steps:


      - name: Prepare - Checkout Repo(s) and Read YAML(s)
        id: pre_build
        uses: theonlyfaddyinc/devops-standard-library/composite_actions/prepare_phase/pre_build_steps@main
        with:
          global_config_repo: "theonlyfaddyinc/global_configs"
          global_config_repo_checkout_path: "global_configs"


      - name: Setup build tools & runtime installation
        id: setup_build_tools
        uses: theonlyfaddyinc/devops-standard-library/composite_actions/setup_build_tools@main
        with:
          pipeline_repo: ${{ steps.pre_build.outputs.pipeline_repo }}
          pipeline_global: ${{ steps.pre_build.outputs.pipeline_global }}

      - name: Build Phase
        id: build_phase
        uses: theonlyfaddyinc/devops-standard-library/composite_actions/build_phase@main
        with:
          flags: ''
          pipeline_repo: ${{ steps.pre_build.outputs.pipeline_repo }}
          pipeline_global: ${{ steps.setup_build_tools.outputs.pipeline_global }}
          pipeline_type: ${{ inputs.pipeline_type }}
          build_lang_name: ${{ steps.setup_build_tools.outputs.build_lang_name }}
          build_tool_name: ${{ steps.setup_build_tools.outputs.build_tool_name }}
          build_tool_settings: ${{ steps.setup_build_tools.outputs.build_tool_settings }}
        
      # - name: Build Snapshot
      #   id: build_snapshot
      #   uses: theonlyfaddyinc/devops-standard-library/composite_actions/build_phase@main
      #   with:
      #     flags: ''
          
      # - name: Run Unit Tests
      #   id: run_unit_tests
      #   uses: theonlyfaddyinc/devops-standard-library/composite_actions/std_maven_actions/testUnit@main
      #   with:
      #     flags: ''

      # - name: Run Functional Tests
      #   id: run_functional_tests
      #   uses: theonlyfaddyinc/devops-standard-library/composite_actions/std_maven_actions/testFunctional@main
      #   with:
      #     flags: ''
          
      # - name: Build Release
      #   id: build_release
      #   uses: theonlyfaddyinc/devops-standard-library/composite_actions/std_maven_actions/buildRelease@main
      #   with:
      #     flags: ''       
        
  # Run_Unit_Tests:
  #   runs-on: ubuntu-latest
  #   needs: [Build_Code]
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - uses: theonlyfaddyinc/devops-standard-library/composite_action/setup-jdk-maven@main
  #     with:
  #       jdk_version: '14'
  #       maven_version: '3.8.1'

  #   - name: Test
  #     run: mvn test --update-snapshots --no-transfer-progress 
      
  # Run_Functional_Tests:
  #   runs-on: ubuntu-latest
  #   needs: [Run_Unit_Tests]
  #   steps:
  #   - uses: actions/checkout@v2

  #   - uses: theonlyfaddyinc/devops-standard-library/composite_action/setup-jdk-maven@main
  #     with:
  #       jdk_version: '14'
  #       maven_version: '3.8.1'

  #   - name: verify
  #     run: mvn verify --update-snapshots --no-transfer-progress     
      
  # Evaluate:
  #   runs-on: ubuntu-latest
  #   needs: [Run_Functional_Tests]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Check the JDK java-version
  #     run: | 
  #           java --version
  #           mvn --version      
  #   - name: evaluate
  #     run: mvn help:evaluate -Dexpression=project.version --quiet -DforceStdout     
      
